★▶►▬•»›▲♥⚠️💡±×÷²√π⁰≠≈≤≥Ø∞✓✗✖ € ← → ↑ ↓ ⇆♪©Ⓓ㊿†₱…
npm i -D webpack webpack-cli
  package.json/ "scripts":{"build":"webpack --mode production"}
npm run build
  webpack.config.js/ module.exports = {mode: 'development',}
  package.json/ "scripts":{"build":"webpack"}

  const path = require('path');
  module.exports = {
    mode: 'development',
    entry: {
      bundle: path.resolve(__dirname, 'src/index.js')
    },
    output: {
      path: path.resolve(__dirname, 'dist'),
      filename: '[name].js'
    }
  }

npm i -D sass style-loader css-loader sass-loader
  const path = require('path');
  module.exports = {
    mode: 'development',
    entry: {
      bundle: path.resolve(__dirname, 'src/index.js')
    },
    output: {
      path: path.resolve(__dirname, 'dist'),
      filename: '[name].js'
    },
    module: {
      rules: [
        {
          test: /\.scss$/,
          use: [
            'style-loader',
            'css-loader',
            'sass-loader'
          ]
        }
      ]
    }
  }

npm i -D html-webpack-plugin
  const HtmlWebpackPlugin = require('html-webpack-plugin');
  ,plugins: [new HtmlWebpackPlugin({title:'web-pack',filename:'index.html',template:"src/template.html"})]
  <title><%= htmlWebpackPlugin.options.title %></title>
npm run build
  "scripts":{"build":"webpack","dev":"webpack serve"}
npm i -D webpack-dev-server

  devtool: 'source-map',

npm i -D babel-loader @babel/core @babel/preset-env

npm i axios